import { gql } from 'graphql-tag'

export const GET_NEAR_BY_EVENTS = gql`
query ($where: data_events_bool_exp!,$user_lat: float8, $user_lon: float8, $offset:Int $limit:Int){
  data_get_nearby_events(args: {user_lat: $user_lat, user_lon: $user_lon,radius:1000000}, where:$where, offset: $offset, limit:$limit) {
      event_id
      title
      description
      ticket_price
      event_date
      thumbnail_image_url
      total_available_tickets
      address {
        street_name
        city_name
        region_name
      }
      location{
        latitude
        longitude
      }
      category{
      category_name
      }

    bookmarks {
      book_marker_user_id
      book_marked_event_id
    }

    organization {
      created_at
      followers
      organization_id
      organization_name
      follows {
        following_user_id
        followed_organization_id
      }
    }

  }
}`

export const PUB_GET_NEAR_BY_EVENTS = gql`
query ($where: data_events_bool_exp!,$user_lat: float8, $user_lon: float8, $offset:Int,  $limit:Int){
data_get_nearby_events(args: {user_lat: $user_lat, user_lon: $user_lon,radius:1000000}, where:$where, offset: $offset, limit:$limit) { 
      event_id
      title
      description
      ticket_price
      event_date
      thumbnail_image_url
      total_available_tickets
      address {
        street_name
        city_name
        region_name
      }
      location{
        latitude
        longitude
      }
      category{
      category_name
      }
    organization {
      created_at
      followers
      organization_id
      organization_name
    }

  }
}`

export const HAS_MORE_NEAR_BY_EVENT = gql`
query ($where: data_events_bool_exp!,$user_lat: float8, $user_lon: float8, $offset:Int){
data_get_nearby_events_aggregate(args: {user_lat: $user_lat, user_lon: $user_lon,radius:1000000}, where:$where, offset: $offset) {
  has_more:
    aggregate {
      count
    }
  }
  }
`     
